name: pipeline
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      API_KEY: 'lorem-ipsum'
    steps:

      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.10"

      #----------------------------------------------
      #       install & configure poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      #           run pipeline actions
      #----------------------------------------------
      - name: Code convention
        run: source .venv/bin/activate && make code-convention
      - name: Test
        run: source .venv/bin/activate && make test

      #----------------------------------------------
      #         generating coverage badge
      #----------------------------------------------
      - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v2
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            directory: ./coverage/reports/
            env_vars: OS,PYTHON
            fail_ci_if_error: true
            files: ./coverage1.xml,./coverage2.xml
            flags: unittests
            name: codecov-umbrella
            path_to_write_report: ./coverage/codecov_report.txt
            verbose: true
